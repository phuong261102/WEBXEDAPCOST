@using Newtonsoft.Json
@model XEDAPVIP.Controllers.AdminController.DashboardData
@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<body style="margin: 0 0 0 100px;">
    <div class="container mt-3">
        <div class="row">
            <div class="col-lg-3 mb-3">
                <div class="card">
                    <h5 class="card-header">Người dùng</h5>
                    <div class="card-body">
                        <p class="card-text">Total Users: @Model.TotalUsers</p>
                    </div>
                </div>
            </div>

            <div class="col-lg-3 mb-3">
                <div class="card">
                    <h5 class="card-header">Đơn hàng</h5>
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item">Tổng Đơn Hàng: @Model.TotalOrders</li>
                    </ul>
                </div>
            </div>

            <div class="col-lg-3 mb-3">
                <div class="card">
                    <h5 class="card-header">Doanh thu</h5>
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item">Tổng Doanh Thu: @Model.TotalRevenue.ToString("N0") VNĐ</li>
                        <li class="list-group-item">% Tăng so với:
                            <ul>
                                <li>1 ngày trước: @Model.PercentageChangePreviousDay.ToString("N2")%</li>
                                <li>1 tuần trước: @Model.PercentageChangePreviousWeek.ToString("N2")%</li>
                                <li>1 tháng trước: @Model.PercentageChangePreviousMonth.ToString("N2")%</li>
                            </ul>
                        </li>
                    </ul>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-5" style="max-width: 500px; max-height: 500px">
                <div>
                    <h2>Biểu Đồ Thống Kê Đơn Hàng</h2>
                    <canvas id="orderStatusChart"></canvas>
                </div>
            </div>
            <div class="col-md-5" style="max-width: 650px; max-height: 650px">
                <div>
                    <h2>Doanh thu</h2>
                    <div class="row d-flex">
                        <div class="form-group col-md-4">
                            <label for="startDate">Từ ngày:</label>
                            <input type="text" id="startDate" class="form-control" />
                        </div>
                        <div class="form-group col-md-4">
                            <label for="endDate">Đến ngày:</label>
                            <input type="text" id="endDate" class="form-control" />
                        </div>
                        <div class="form-group col-md-4">
                            <label for="dateRange">Khoảng thời gian:</label>
                            <select id="dateRange" class="form-control">
                                <option value="">Tùy chọn</option>
                                <option value="week">1 Tuần</option>
                                <option value="month">1 Tháng</option>
                                <option value="year">1 Năm</option>
                            </select>
                        </div>
                    </div>
                    <button id="updateChart" class="btn btn-primary mt-3">Cập nhật biểu đồ</button>
                    <canvas id="revenueChart" class="mt-3"></canvas>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <h2>Sản phẩm bán chạy</h2>
                <canvas id="topSellingProductsChart"></canvas>
            </div>
            <div class="col-md-6">
                <h2>Thương hiệu bán chạy</h2>
                <canvas id="topSellingBrandsChart"></canvas>
            </div>
        </div>
</body>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        if (typeof $.fn.datepicker === 'undefined') {
            console.error("jQuery UI datepicker is not loaded.");
            return;
        }

        var dateFormat = "yy-mm-dd";
        var startDatePicker = $("#startDate").datepicker({
            dateFormat: dateFormat,
            onClose: function (selectedDate) {
                $("#endDate").datepicker("option", "minDate", selectedDate);
            }
        });
        var endDatePicker = $("#endDate").datepicker({
            dateFormat: dateFormat,
            onClose: function (selectedDate) {
                $("#startDate").datepicker("option", "maxDate", selectedDate);
            }
        });

        $("#dateRange").change(function () {
            var selectedRange = $(this).val();
            var today = new Date();
            var startDate, endDate;

            switch (selectedRange) {
                case 'week':
                    startDate = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 7);
                    break;
                case 'month':
                    startDate = new Date(today.getFullYear(), today.getMonth() - 1, today.getDate());
                    break;
                case 'year':
                    startDate = new Date(today.getFullYear() - 1, today.getMonth(), today.getDate());
                    break;
                default:
                    startDate = null;
                    endDate = null;
            }

            if (startDate) {
                startDatePicker.datepicker("setDate", startDate);
                endDatePicker.datepicker("setDate", today);
                $("#startDate").datepicker("option", "maxDate", today);
                $("#endDate").datepicker("option", "minDate", startDate);
            }
        });

        var orderStatusCtx = document.getElementById('orderStatusChart').getContext('2d');
        var orderStatusChart = new Chart(orderStatusCtx, {
            type: 'pie',
            data: {
                labels: ['Pending', 'Paid', 'Completed', 'Canceled'],
                datasets: [{
                    label: 'Order Status',
                    data: [
    @Model.PendingOrders,
    @Model.PaidOrders,
    @Model.CompletedOrders,
    @Model.CanceledOrders
                    ],
                    backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#FF4500']
                }]
            },
            options: {
                responsive: true
            }
        });

        var revenueCtx = document.getElementById('revenueChart').getContext('2d');
        var revenueChart = new Chart(revenueCtx, {
            type: 'line',
            data: {
                labels: [],
                datasets: [{
                    label: 'Doanh thu',
                    data: [],
                    borderColor: '#36A2EB',
                    fill: false
                }]
            },
            options: {
                responsive: true,
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Thời gian'
                        }
                    },
                    y: {
                        title: {
                            display: true,
                            text: 'Doanh thu'
                        }
                    }
                }
            }
        });

        document.getElementById('updateChart').addEventListener('click', function () {
            var startDate = document.getElementById('startDate').value;
            var endDate = document.getElementById('endDate').value;

            if (!startDate || !endDate) {
                alert("Vui lòng chọn cả hai ngày!");
                return;
            }

            $.ajax({
                url: '@Url.Action("GetRevenueData", "Admin")',
                type: 'GET',
                data: {
                    startDate: startDate,
                    endDate: endDate
                },
                success: function (data) {
                    revenueChart.data.labels = data.labels;
                    revenueChart.data.datasets[0].data = data.revenue;
                    revenueChart.update();
                },
                error: function () {
                    alert("Đã xảy ra lỗi khi tải dữ liệu.");
                }
            });
        });
        var topSellingProductsCtx = document.getElementById('topSellingProductsChart').getContext('2d');
        var topSellingProductsChart = new Chart(topSellingProductsCtx, {
            type: 'bar',
            data: {
                labels: @Html.Raw(JsonConvert.SerializeObject(Model.ProductSales.Select(p => p.ProductName))),
                datasets: [{
                    label: 'Số lượng bán',
                    data: @Html.Raw(JsonConvert.SerializeObject(Model.ProductSales.Select(p => p.TotalQuantity))),
                    backgroundColor: '#36A2EB'
                }]
            },
            options: {
                indexAxis: 'y', // Chuyển trục để các cột nằm ngang
                responsive: true,
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Số lượng bán'
                        }
                    },
                    y: {
                        title: {
                            display: true,
                            text: 'Sản phẩm'
                        }
                    }
                }
            }
        });
        // Biểu đồ thương hiệu bán chạy
        var topSellingBrandsCtx = document.getElementById('topSellingBrandsChart').getContext('2d');
        var topSellingBrandsChart = new Chart(topSellingBrandsCtx, {
            type: 'bar',
            data: {
                labels: @Html.Raw(JsonConvert.SerializeObject(Model.TopSellingBrands.Select(b => b.BrandName).ToList())),
                datasets: [{
                    label: 'Số lượng bán',
                    data: @Html.Raw(JsonConvert.SerializeObject(Model.TopSellingBrands.Select(b => b.QuantitySold).ToList())),
                    backgroundColor: 'rgba(255, 159, 64, 0.6)',
                    borderColor: 'rgba(255, 159, 64, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Thương hiệu'
                        }
                    },
                    y: {
                        title: {
                            display: true,
                            text: 'Số lượng'
                        },
                        beginAtZero: true
                    }
                }
            }
        });
    });
</script>
