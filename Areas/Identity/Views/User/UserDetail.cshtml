@model App.Areas.Identity.Controllers.UserController.UserDetailViewModel

@{
    ViewData["Title"] = "Chi tiết thành viên: " + Model.UserName;
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<style>
    .text-00 {
        font-size: 1rem;
        padding-bottom: 10px;
        padding-left: 5px;
    }
</style>
<div class="mt-4">
    <div class="">
        <div class="col-md-10">
            <h3 style="padding-bottom: 20px;">Thông tin cơ bản</h3>
            <p class="text-00"><strong>Tên tài khoản :</strong> @Model.UserName</p>
            <p class="text-00"><strong>Email:</strong> @Model.UserEmail</p>
            <p class="text-00"><strong>Số điện thoại:</strong> @Model.PhoneNumber</p>
            <p class="text-00"><strong>Ngày sinh:</strong> @Model.BirthDate?.ToString("dd/MM/yyyy")</p>
            <p class="text-00"><strong>Địa chỉ:</strong> @Model.HomeAddress</p>
        </div>
        <div class="col-md-12">
            <h3>Đơn hàng</h3>

            <div class="form-group">
                <label for="statusFilter">Lọc theo trạng thái:</label>
                <select id="statusFilter" class="form-control" onchange="filterOrders()">
                    <option value="all">Tất cả</option>
                    <option value="Pending">Chờ xử lý</option>
                    <option value="Paid">Đã Thanh Toán</option>
                    <option value="Delivering">Đang Giao</option>
                    <option value="Completed">Hoàn thành</option>
                    <option value="Canceled">Hủy bỏ</option>
                    <option value="Failed">Thất bại</option>
                </select>
            </div>
            <div class="form-group">
                <label for="searchInput">Tìm kiếm:</label>
                <input type="text" id="searchInput" class="form-control" onkeyup="searchOrders()"
                    placeholder="Tìm theo mã đơn hàng hoặc tên sản phẩm">
            </div>

            @if (Model.Orders != null && Model.Orders.Any())
            {
                var countOrder = ViewBag.countOrder;
                var countPaidOrder = ViewBag.countPaidOrder;
                <p>Tổng đơn hàng : @countOrder Tổng tiền đã thanh toán : @countPaidOrder.ToString("N0")VNĐ</p>
                <div class="" style="height: auto; overflow: auto;">
                    <table class="table table-bordered table-striped">
                        <thead style="position: sticky; top: 0; background: white;">
                            <tr>
                                <th><a href="#" onclick="sortTable(0)">Mã đơn hàng</a></th>
                                <th><a href="#" onclick="sortTable(1)">Số lượng</a></th>
                                <th><a href="#" onclick="sortTable(2)">Tổng tiền</a></th>
                                <th><a href="#" onclick="sortTable(3)">Trạng thái</a></th>
                                <th><a href="#" onclick="sortTable(4)">Ngày đặt</a></th>
                                <th>Hành động</th>
                            </tr>
                        </thead>
                        <tbody id="orderTable">
                            @foreach (var order in Model.Orders)
                            {
                                <tr class="order-row" data-status="@order.Status" data-order-id="@order.OrderId"
                                    data-product-names="@string.Join(",", order.OrderDetails.Select(d => d.ProductName).ToArray())">
                                    <td>@order.OrderId</td>
                                    <td>@order.OrderDetails.Sum(od => od.Quantity)</td>
                                    <td>
                                        @order.TotalAmount.ToString("N0")VND
                                    </td>
                                    <td>@order.Status</td>
                                    <td>@order.OrderDate.ToString("dd/MM/yyyy")</td>
                                    <td>
                                        <button class="btn btn-info" type="button" onclick="toggleDetails(@order.OrderId)">Xem
                                            Chi Tiết</button>
                                    </td>
                                </tr>
                                <tr id="order-details-@order.OrderId" style="display: none;">
                                    <td colspan="6">
                                        <table class="table table-sm table-bordered">
                                            <thead>
                                                <tr>
                                                    <th>Tên Sản Phẩm</th>
                                                    <th>Mô Tả</th>
                                                    <th>Hình Ảnh</th>
                                                    <th>Số Lượng</th>
                                                    <th>Đơn Giá</th>
                                                    <th>Tổng Giá</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var detail in order.OrderDetails)
                                                {
                                                    <tr>
                                                        <td>@detail.ProductName</td>
                                                        <td>@detail.ProductDescription</td>
                                                        <td>
                                                            @{
                                                                var imagePath = Url.Content(detail.ProductImage);
                                                            }
                                                            <img src="@imagePath" alt="@detail.ProductName" class="img-thumbnail"
                                                                style="width: 50px; height: 50px;">
                                                        </td>
                                                        <td>@detail.Quantity</td>
                                                        <td>@detail.UnitPrice.ToString("N0") VND</td>
                                                        <td>@detail.TotalPrice.ToString("N0") VND</td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </td>
                                </tr>
                            }

                        </tbody>

                    </table>

                </div>
            }
            else
            {
                <p>Không có đơn hàng nào.</p>
            }
        </div>
    </div>
</div>
<style>
    .container {
        padding: 20px;
    }

    .table {
        margin-bottom: 0;
    }

    .table-sm th,
    .table-sm td {
        padding: .3rem;
    }

    .img-thumbnail {
        display: block;
        margin: auto;
    }

    .btn-info {
        width: 100px;
    }

    .table-responsive {
        max-height: 400px;
        overflow: auto;
    }
</style>

<script>
    let sortDirection = {
        0: true,
        1: true,
        2: true,
        3: true,
        4: true
    };

    function toggleDetails(orderId) {
        var detailsRow = document.getElementById('order-details-' + orderId);
        detailsRow.style.display = detailsRow.style.display === 'none' ? 'table-row' : 'none';
    }

    function sortTable(columnIndex) {
        var table = document.getElementById('orderTable');
        var rows = Array.from(table.getElementsByClassName('order-row'));
        var ascending = sortDirection[columnIndex];

        var sortedRows = rows.sort(function (a, b) {
            var aText = a.getElementsByTagName('td')[columnIndex].innerText;
            var bText = b.getElementsByTagName('td')[columnIndex].innerText;

            if (columnIndex === 2) { // Sort by total amount
                return (parseFloat(aText.replace(/[^0-9.-]+/g, "")) - parseFloat(bText.replace(/[^0-9.-]+/g, ""))) * (ascending ? 1 : -1);
            } else if (columnIndex === 4) { // Sort by date
                var aDate = new Date(aText.split('/').reverse().join('/'));
                var bDate = new Date(bText.split('/').reverse().join('/'));
                return (aDate - bDate) * (ascending ? 1 : -1);
            } else {
                return aText.localeCompare(bText, undefined, { numeric: true }) * (ascending ? 1 : -1);
            }
        });

        sortDirection[columnIndex] = !sortDirection[columnIndex];

        table.innerHTML = "";
        sortedRows.forEach(function (row) {
            table.appendChild(row);
        });
    }

    function filterOrders() {
        var filter = document.getElementById('statusFilter').value;
        var rows = document.getElementsByClassName('order-row');

        Array.from(rows).forEach(function (row) {
            if (filter === 'all' || row.getAttribute('data-status') === filter) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
    }

    function searchOrders() {
        var searchInput = document.getElementById('searchInput').value.toLowerCase();
        var rows = document.getElementsByClassName('order-row');

        Array.from(rows).forEach(function (row) {
            var orderId = row.getAttribute('data-order-id').toLowerCase();
            var productNames = row.getAttribute('data-product-names').toLowerCase();

            if (orderId.includes(searchInput) || productNames.includes(searchInput)) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
    }
</script>
