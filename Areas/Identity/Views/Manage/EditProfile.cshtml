@model App.Areas.Identity.Models.ManageViewModels.EditExtraProfileModel

@{
    ViewData["Title"] = "Hồ sơ cá nhân";
}

<style>
    .gd {
        padding-top: 50px;
        padding-bottom: 200px;
    }

    .form-group label {
        padding: 10px 0;
    }

    .gd-1 {
        width: 100%;
    }
</style>

<body>
    <div class="gd">
        <div class="grid">
            <h4>@ViewData["Title"]</h4>

            <partial name="_StatusMessage" />

            <div style="display: flex; width: 100%;">
                <div style="width: 50%;">
                    <div class="col-md-6 gd-1">
                        <form style="width: 500px;" id="profile-form" method="post">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="form-group">
                                <label asp-for="UserName"></label>
                                <input asp-for="UserName" class="form-control" disabled />
                            </div>
                            <div class="form-group">
                                <label asp-for="UserEmail"></label>
                                <input asp-for="UserEmail" class="form-control" disabled />
                            </div>
                            <div class="form-group">
                                <label asp-for="PhoneNumber"></label>
                                <input asp-for="PhoneNumber" class="form-control" type="text" />
                            </div>

                            <div id="existing-addresses">
                                <h5 style="padding-top: 20px;">Địa chỉ hiện có</h5>
                                @if (Model.Addresses != null && Model.Addresses.Count > 0)
                                {
                                    foreach (var address in Model.Addresses.Select((value, index) => new { value, index }))
                                    {
                                        <div class="row">
                                            <div class="col-md-8">
                                                <p>
                                                    @address.value.StreetNumber, @address.value.SelectedWard,
                                                    @address.value.SelectedDistrict, @address.value.SelectedProvince
                                                </p>
                                            </div>
                                            <div class="col-md-4">
                                                <input type="checkbox" class="set-default" name="DefaultAddressIndex"
                                                    value="@address.index" @(address.value.IsDefault ? "checked" : "") />
                                                <button type="button" class="btn btn-danger delete-address"
                                                    data-index="@address.index">
                                                    <i class="fa fa-trash"></i>
                                                </button>
                                            </div>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <p style="padding-top: 10px;">Không có địa chỉ được lưu.</p>
                                }
                            </div>
                            <button type="button" id="add-address" class="btn btn-secondary">
                                <i class="fa fa-plus"></i> Thêm Địa Chỉ Mới
                            </button>
                            <div id="add-address-form" style="display:none;">
                                <div>
                                    <label style="padding: 10px 0;" asp-for="StreetNumber"></label>
                                    <input asp-for="StreetNumber" class="form-control mb-2" />
                                </div>
                                <div class="form-group d-flex">
                                    <select asp-for="SelectedProvince" asp-items="Model.ProvinceOptions"
                                        class="form-control me-2">
                                        <option value="">Chọn Tỉnh/Thành phố</option>
                                    </select>
                                    <select asp-for="SelectedDistrict" asp-items="Model.DistrictOptions"
                                        class="form-control me-2">
                                        <option value="">Chọn Quận/Huyện</option>
                                    </select>
                                    <select asp-for="SelectedWard" asp-items="Model.WardOptions" class="form-control">
                                        <option value="">Chọn Phường/Xã</option>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group">
                                <label asp-for="BirthDate"></label>
                                <input asp-for="BirthDate" class="form-control" type="date" />
                                <span style="padding: 10px 0;" asp-validation-for="BirthDate"
                                    class="text-danger"></span>
                            </div>

                            <div style="padding-top: 20px; width: 100%; text-align: center;" class="btn">
                                <button id="update-profile-button" type="submit" class="btn btn-primary">
                                    Lưu dữ liệu
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
                <div style="padding: 5%;"></div>
                <div style="width: 50%;"></div>
            </div>
        </div>
    </div>
</body>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        // Function to load districts based on selected province
        function loadDistricts(provinceId) {
            if (provinceId) {
                $.getJSON('/Member/GetDistrictsByProvinceId', { provinceId: provinceId }, function (districts) {
                    var districtSelect = $('#SelectedDistrict');
                    districtSelect.empty();
                    districtSelect.append($('<option/>', { value: '', text: 'Chọn Quận/Huyện' }));
                    $.each(districts, function (index, district) {
                        districtSelect.append($('<option/>', { value: district.id, text: district.name }));
                    });
                });
            } else {
                $('#SelectedDistrict').empty().append($('<option/>', { value: '', text: 'Chọn Quận/Huyện' }));
            }
            $('#SelectedWard').empty().append($('<option/>', { value: '', text: 'Chọn Phường/Xã' }));
        }

        // Function to load wards based on selected district
        function loadWards(districtId) {
            if (districtId) {
                $.getJSON('/Member/GetWardsByDistrictId', { districtId: districtId }, function (wards) {
                    var wardSelect = $('#SelectedWard');
                    wardSelect.empty();
                    wardSelect.append($('<option/>', { value: '', text: 'Chọn Phường/Xã' }));
                    $.each(wards, function (index, ward) {
                        wardSelect.append($('<option/>', { value: ward.id, text: ward.name }));
                    });
                });
            } else {
                $('#SelectedWard').empty().append($('<option/>', { value: '', text: 'Chọn Phường/Xã' }));
            }
        }




        $(document).ready(function () {
            $('#SelectedProvince').change(function () {
                var provinceId = $(this).val();
                loadDistricts(provinceId);
            });

            $('#SelectedDistrict').change(function () {
                var districtId = $(this).val();
                loadWards(districtId);
            });

            $('#add-address').click(function () {
                if ($('#add-address-form').is(':hidden')) {
                    $('#add-address-form').show();
                } else {
                    var newAddress = {
                        StreetNumber: $('#StreetNumber').val(),
                        SelectedProvince: $('#SelectedProvince').val(),
                        SelectedDistrict: $('#SelectedDistrict').val(),
                        SelectedWard: $('#SelectedWard').val(),
                        IsDefault: false
                    };
                    $.post('/Member/AddAddress', newAddress, function (response) {
                        location.reload();
                        $('#add-address-form').hide();
                    });
                }
            });

            $(document).on('click', '.delete-address', function () {
                var addressIndex = $(this).data('index');
                $.post('/Member/DeleteAddress', { index: addressIndex }, function (response) {
                    if (response.success) {
                        location.reload();
                    }
                });
            });

            $(document).on('change', '.set-default', function () {
                var index = $(this).val();
                var isChecked = $(this).is(':checked');

                // Uncheck other checkboxes
                $('.set-default').not(this).prop('checked', false);

                // Update the IsDefault property of the addresses
                $.post('/Member/SetDefaultAddress', { index: index, isDefault: isChecked }, function (response) {
                });
            });



            $('#update-profile-button').click(function (event) {
                event.preventDefault();
                $('#profile-form').submit();
            });
            $(document).ready(function () {
                $('.set-default').change(function () {
                    if ($(this).is(':checked')) {
                        $('.set-default').not(this).prop('checked', false);
                    }
                });
            });

        });

        document.addEventListener('DOMContentLoaded', () => {
            const phoneNumberInput = document.querySelector('input[name="PhoneNumber"]');

            phoneNumberInput.addEventListener('input', () => {
                const maxDigits = 10;
                let value = phoneNumberInput.value;

                if (value.length > maxDigits) {
                    phoneNumberInput.value = value.slice(0, maxDigits);
                }
            });

            phoneNumberInput.addEventListener('blur', () => {
                const maxDigits = 10;
                let value = phoneNumberInput.value;

                // Kiểm tra nếu số điện thoại có ít hơn 10 số
                if (value.length < maxDigits) {
                    // Hiển thị thông báo
                    alert('Số điện thoại phải có đủ 10 số.');
                    // Xóa nội dung của trường nhập liệu
                    phoneNumberInput.value = '';
                }
            });
        });



    </script>
}
