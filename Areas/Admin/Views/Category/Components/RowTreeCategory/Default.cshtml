@model dynamic
@{
    List<App.Models.Category> categories = Model.categories;
    int level = Model.level;
    string prefix = String.Concat(Enumerable.Repeat("&nbsp;&nbsp;&nbsp;&nbsp;", level));

}
@if (categories.Count > 0)
{
    @foreach (var item in categories)
    {
        <tr>
            <td>
                @* @Html.DisplayFor(modelItem => item.Title) *@
                @Html.Raw(@prefix)
                <a asp-action="Details" asp-route-id="@item.Id">@item.Title</a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Content)
            </td>
            <td>

                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning">Sá»­a</a>
                <form asp-action="Delete" asp-route-id="@item.Id">
                    <input type="hidden" asp-for="@item.Id" />
                    <input type="submit" value="Delete" class="btn btn-danger" />
                </form>
            </td>
        </tr>
        @if (item.CategoryChildren != null && item.CategoryChildren.Count > 0)
        {
            @await Component.InvokeAsync("RowTreeCategory", new { categories = item.CategoryChildren.ToList(), level = level + 1 })
        }
    }
}